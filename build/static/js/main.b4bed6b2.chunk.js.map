{"version":3,"sources":["components/Header.js","store/todos.js","components/Form/useUpdateForm.js","components/UpdateInput.js","components/Todo.js","components/Todos.js","components/Form/useForm.js","components/MiniDashboard.js","components/SearchInput.js","components/Input.js","App.js","store/configureStore.js","index.js"],"names":["Header","title","className","slice","createSlice","name","initialState","reducers","todoAdded","todos","action","push","todo","payload","completed","id","uuid","todoRemoved","filter","todoUpdated","index","findIndex","todoCompleted","actions","useUpdateForm","setShowForm","dispatch","useDispatch","useState","showForm","updateValues","setUpdateValues","handleChange","e","target","value","handleSubmit","preventDefault","handleClose","propTypes","PropTypes","bool","isRequired","func","UpdateInput","onSubmit","type","onChange","onClick","icon","faWindowClose","Todo","updateComplete","setUpdateComplete","useEffect","handleComplete","prevState","checked","faEdit","faTrash","Todos","newTodos","useSelector","state","map","item","newFilteredTodos","useForm","setValue","MiniDashboard","length","SearchInput","handleSearchChange","placeholder","Input","searchTerm","setSearchTerm","data","indexOf","filterTodos","store","configureStore","reducer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4bed6b2.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = ({ title }) => {\n  return <h1 className=\"title\">{title}</h1>;\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport { v4 as uuid } from 'uuid'\n\nconst slice = createSlice ({\n  name: \"todos\",\n  initialState: [],\n  reducers: {\n    todoAdded: (todos, action) => {\n      todos.push({\n        todo: action.payload.todo,\n        completed: false,\n        id: uuid(),\n      })\n    },\n    todoRemoved: (todos, action) => {\n      return todos.filter((todo) => todo.id !== action.payload)\n    },\n    todoUpdated: (todos, action) => {\n      const index = todos.findIndex((todo) => todo.id === action.payload.id)\n      todos[index] = {\n        todo: action.payload.todo,\n        id: action.payload.id,\n      }\n    },\n    todoCompleted: (todos, action) => {\n      const index = todos.findIndex((todo) => todo.id === action.payload.id)\n      todos[index].completed = action.payload.completed\n    }\n  }\n})\n\nexport const { todoAdded, todoRemoved, todoUpdated, todoCompleted } = slice.actions\nexport default slice.reducer","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { todoUpdated } from \"../../store/todos\";\nimport PropTypes from \"prop-types\";\n\nconst useUpdateForm = ({ todo, setShowForm }) => {\n  const dispatch = useDispatch();\n  const [updateValues, setUpdateValues] = useState({\n    todo: todo.todo,\n    id: todo.id,\n    showForm: todo.showForm,\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUpdateValues({\n      ...updateValues,\n      [name]: value,\n      showForm: false,\n    });\n  };\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(todoUpdated(updateValues));\n    setShowForm(false);\n  };\n\n  const handleClose = () => {\n    setShowForm(false);\n  };\n\n  return { handleChange, updateValues, handleSubmit, handleClose };\n};\n\nuseUpdateForm.propTypes = {\n  todo: PropTypes.bool.isRequired,\n  setShowForm: PropTypes.func.isRequired,\n};\n\nexport default useUpdateForm;\n","import React from \"react\";\nimport useUpdateForm from \"../components/Form/useUpdateForm\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\n\nconst UpdateInput = ({ todo, setShowForm }) => {\n  const { handleChange, handleSubmit, updateValues, handleClose } =\n    useUpdateForm({\n      todo,\n      setShowForm,\n    });\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"todo\"\n          type=\"text\"\n          value={updateValues.todo}\n          onChange={handleChange}\n        />\n        {/* <FontAwesomeIcon icon={faPencilAlt} /> */}\n        <FontAwesomeIcon onClick={handleClose} icon={faWindowClose} />\n        {/* <button type=\"submit\">Update</button>\n        <button type=\"button\" onClick={handleClose}>\n          Cancel\n        </button> */}\n      </form>\n    </>\n  );\n};\n\nUpdateInput.propTypes = {\n  setShowForm: PropTypes.func.isRequired,\n  todo: PropTypes.object.isRequired,\n};\n\nexport default UpdateInput;\n","import React, { useState, useEffect } from \"react\";\nimport UpdateInput from \"./UpdateInput\";\nimport { todoRemoved, todoCompleted } from \"../store/todos\";\nimport { useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Todo = ({ todo, className }) => {\n  const dispatch = useDispatch();\n  const [showForm, setShowForm] = useState(false);\n  const [updateComplete, setUpdateComplete] = useState({\n    todo: todo.todo,\n    id: todo.id,\n    completed: todo.completed,\n  });\n\n  const handleShowForm = () => {\n    setShowForm(true);\n  };\n\n  const handleChange = () => {\n    handleComplete()\n  }\n\n  useEffect(() => {\n    dispatch(todoCompleted(updateComplete));\n  }, [updateComplete.completed]);\n\n  const handleDelete = (id) => {\n    dispatch(todoRemoved(id));\n  };\n\n  const handleComplete = () => {\n    setUpdateComplete((prevState) => ({\n      ...prevState,\n      completed: !prevState.completed,\n    }));\n  };\n\n  return (\n    <>\n      <div\n        className={`${className % 2 === 0 ? \"todo cardEven\" : \"todo cardOdd\"}`}\n      >\n        <div className=\"todo-body\">\n          <li className=\"update-todo\">\n            <input\n            className=\"checkbox\"\n            type=\"checkbox\"\n            name=\"complete\"\n            checked={updateComplete.completed}\n            onChange={handleChange}\n            />\n            {showForm ? (\n              <UpdateInput setShowForm={setShowForm} todo={todo} />\n            ) : (\n              <span className={todo.completed ? \"strike\" : null}>\n                {todo.todo}\n              </span>\n            )}\n          </li>\n          <div className=\"todo-actions\">\n            {!todo.completed ? (\n              <FontAwesomeIcon\n                icon={faEdit}\n                onClick={() => handleShowForm()}\n                className=\"\"\n              >\n                Edit\n              </FontAwesomeIcon>\n            ) : null}\n\n            <FontAwesomeIcon\n              icon={faTrash}\n              onClick={() => handleDelete(todo.id)}\n              className=\"\"\n            >\n              Delete\n            </FontAwesomeIcon>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nTodo.propTypes = {\n  todo: PropTypes.object.isRequired,\n  className: PropTypes.number.isRequired,\n};\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./Todo\";\nimport { useSelector } from \"react-redux\";\nimport propTypes from \"prop-types\";\n\nconst Todos = ({ newTodos }) => {\n  const data = useSelector((state) => state);\n  const todos = data.map((item, index) => (\n    <Todo className={index} key={item.id} todo={item} />\n  ));\n  const newFilteredTodos = newTodos.map((item, index) => (\n    <Todo className={index} key={item.id} todo={item} />\n  ));\n  return (\n    <div className=\"todos-container\">\n      <ul>{newFilteredTodos ? newFilteredTodos : todos}</ul>\n    </div>\n  );\n};\n\nTodos.propTypes = {\n  newTodos: propTypes.array.isRequired,\n};\n\nexport default Todos;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { todoAdded } from \"../../store/todos\";\n\nconst useForm = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState({\n    todo: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValue({\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (value.todo !== \"\") {\n      dispatch(todoAdded(value));\n      setValue({ todo: \"\" });\n    }\n  };\n\n  return { handleChange, value, handleSubmit };\n};\n\nexport default useForm;\n","import React from \"react\";\n\nconst MiniDashboard = ({ todos }) => {\n  const findCompleted = () => {\n    let compTodos = todos.filter((todo) => todo.completed === true);\n    return compTodos.length;\n  };\n  return (\n    <>\n      <div>\n        <h3>Total Todos: {todos.length}</h3>\n        <h3>Completed Todos: {todos ? findCompleted() : null}</h3>\n      </div>\n    </>\n  );\n};\n\nexport default MiniDashboard;\n","import React from \"react\";\n\nconst SearchInput = ({ handleSearchChange }) => {\n  return (\n    <input\n      className=\"search-todo\"\n      placeholder=\"Search Todos\"\n      type=\"text\"\n      onChange={handleSearchChange}\n    />\n  );\n};\n\nexport default SearchInput;\n","import React, { useState } from \"react\";\nimport Todos from \"./Todos\";\nimport useForm from \"../components/Form/useForm\";\nimport MiniDashboard from \"./MiniDashboard\";\nimport SearchInput from \"./SearchInput\";\nimport { useSelector } from \"react-redux\";\n\nconst Input = () => {\n  const { handleSubmit, value, handleChange } = useForm();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const data = useSelector((state) => state);\n\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const filterTodos = (todos, searchTerm) => {\n    return todos.filter((todo) => todo.todo.indexOf(searchTerm) !== -1);\n  };\n\n  return (\n    <>\n      <SearchInput handleSearchChange={handleSearchChange} />\n      <form className=\"input-form\" onSubmit={handleSubmit}>\n        <input\n          className=\"add-todo todo\"\n          type=\"text\"\n          value={value.todo}\n          name=\"todo\"\n          onChange={handleChange}\n          placeholder=\"Add Todo\"\n        />\n        <button className=\"submit-todo\" type=\"submit\">\n          Add\n        </button>\n      </form>\n\n      <MiniDashboard todos={data} />\n      <Todos newTodos={filterTodos(data, searchTerm)} />\n    </>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Header from \"./components/Header\";\nimport Input from \"./components/Input\";\nimport configureStore from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"hero\">\n        <div className=\"main-container\">\n          <div>\n            <Header title=\"Todo List App\" />\n          </div>\n          <Input />\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\nimport reducer from './todos'\n\nexport default function () {\n  return configureStore({reducer})\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}